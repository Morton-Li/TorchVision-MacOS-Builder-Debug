name: Build TorchVision

on:
  workflow_dispatch:  # 手动触发

env:
  VERSION: "0.18.0"  # TorchVision 版本号

jobs:
  build:
    runs-on: macos-13
    strategy:
      matrix:
        python_version: [ 3.11, 3.12, 3.13 ]
    name: Build TorchVision for Python ${{ matrix.python_version }}
    steps:
      - name: Restore TorchVision source from cache
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          path: vision
          key: vision-${{ env.VERSION }}

      - name: Clone TorchVision repo
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          git clone --depth 1 --branch "v${{ env.VERSION }}" --recursive https://github.com/pytorch/vision.git vision
          git -C vision submodule update --init --recursive --depth 1 || git -C vision submodule update --init --recursive --depth 10 || git -C vision submodule update --init --recursive

      - name: Save TorchVision source to cache
        id: cache-save
        if: steps.restore-cache.outputs.cache-hit != 'true' && matrix.python_version == '3.12'
        uses: actions/cache/save@v4
        with:
          path: vision
          key: vision-${{ env.VERSION }}

      - name: Build wheel
        run: |
          set -e
          

      - name: Upload wheels as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vision-${{ env.VERSION }}-py${{ matrix.python_version }}-macosx-wheel
          path: wheels/*.whl

  release:
    needs: [build]
    runs-on: macos-13
    name: Create release and upload wheels
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: wheels
          merge-multiple: true

      - name: Create release and upload wheels
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: "TorchVision ${{ env.VERSION }} Release"
          files: wheels/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
